<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRegresar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAA68AAAOvARgesX0AAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAKa0lEQVR4Xu2dB+wtRRWHn72ADXtBsBCwK1ZQNAFjQxQVjAVRgohGEkMUjQ3RxKiEKNgbauwlVkCD
        LdYEjAgiCkbAEgRBQeyC9ffBm2SzObM72+7uzpwv+RK4b3f/d3fO7t2ZOTOzxXEcx3Ecx3EcZxFcR97t
        6v90SoPC/5x83lX/5xRFKPz/SQ+AwqgWvgdAYdQL3wOgIKzC9wAohFjhewAUQFPhowdAxrQVPnoAZEpK
        4aMHQIakFj56AGRGl8JHD4CM6Fr46AGQCX0KHz0AMqBv4aMHwMpJKfx/G58FPQBWTGrhH1j7rKoHwErp
        Uvhg/Tt6AKyQroUP1jboAbAyUgv/AFnF2g4/IgmCud2/4mPlQ+TO8tbyutIRfQsfrG3X5J/kWfIk+W75
        Svk0eU/JdcmeIYUP1va5eKU8U35cvlg+SF5bZsPQwgdrn5z9izxZvko+UF5DrpLUwq++8FlY+5Xkb+Rx
        8pFyNU+HMe78gLVvqf5Wvl7eQS6Wse78gLV/6f5HniB5KizqJ4LC/6y0vnQw9c6fg5vIm211R3kf+Qj5
        BPlc+Rr5HsnFP0fyEmed4yb9kXyUnJ21F34f+E3eSe4jj5RflBdI69yn9qvyfnIWSiz8JviNfpY8Xv5S
        WtdjCvlp+LC8hdwYXvjt3EvSAPQDaV2fsb1IPk5OztgvfCVwR/kyeb60rteY8jTYVk6C3/nDuKZ8ovyW
        tK5dTBqKflL7rEleVneRo+KFPy67yi9J6zpa/lQeKk+pfNbkHyVVxlHwwp+O3eS3pXVN6/5e0lTMyyYN
        RNY2Va+Q+8lBeOFPDw07FOrF0rq+VelpfLik/eKDWz9rkrJ5puyFF/5m2U5+UlrXueqfJU8CoMHqMmlt
        F/yXpN2iE17483Gw/Ku0rnmQn4PwondXSReztV3w75KfmyQofK/qzQvtCL+W1rUP/lzeVMI2kpZBa7sg
        bQW3l62kPIZoJ3emhdbFH0vr+gepSYTOoevLL0hru+B35bVkI3vLf0rrAEESGG4gnWnhDj9NWmUQfL4M
        8PT+irS2C9JC2cqTZVvPF3+IqHOm5VbybGmVAdJQdGcZoCXwh9LaFqke0uvZij8JlgM9kDTuWGWAPPqr
        bC8vkda2+H2ZlFfgT4LlQGcPvX9WGeBesgo5A/+V1raYXIPzJ8FyeIe0rj+eKuu8U1rbIrWM5HEM/iRY
        BjeSJI1a1x/JZqrC9k3VyUNkMh4Ey4BHt3Xt8fOyzjOktS2eJ+mlTMZ/DuaHevzPpHXtuUHr2UG87DXV
        CijTTviTYH4OktZ1xxfIOvQZWNsiQ9g640+CeaHpl04h67rXq4TAUyDWlkDN4nayM/4kmJePSuua015g
        NfceJq3t8YWyFx4E8/EcaV1vtFZXubmkFdDanjS13owdBNaY/KXIMG/Ol3Sr3eX9JT1sSa1qI0Pzr3Wt
        ke9oEessovxuLHszZhBY+y7df0gSN6mGHSOfKm8pp4TqW+w9jCxkCzKPrO2RF8VBjBUE1n5rlJer0yUB
        MdUIHnICrL/9BmnBLCax5uFj5WDGCAJrnxz8nny6pMt2LAgw62/RBByDsYXWPnQQjcLQILC2z0mmj3mo
        HINYrsDbZQz+zdrnb7I1WSSVIUFgbZub/DxQEEOfBrF2/jfJGM+W1j54DzkafYPA2i5XT5Q3lH3gbo1d
        39hLIJBvaO2D+8pR6RME1jZINWxuuGPDfALk7FEVI7vm8ZKRO9x51KnJ0rHOwfLrss+j977SOh4+Scbg
        WsfyCl4iR6drEFj/jksIgFQo0AdIAqIpMyd4lOwKrXfWsbBtmd1fSWu/d8lJ6BIE1r/hmgKgCv0hL5VN
        uf6k2d9bduEb0joWYwbaunhj+1r9CKORGgTW57jWAAjwghW785B0/FTI+SNorON8SrbxCWntO1pVMEZK
        EMRcewAAU8peLq3zo0BvI1N4i7SOgbT2tfFWae1Lw9Lk9A2CHAIADpfW+WHKaCvufurs1v4EV0qtgsmv
        rP0ZoLoR+gRBLgHAOwFj9axzfJ9s4zPS2hebWgCr8E5i7U8AbYyuQZBLAABVP+sceTlroim/j2t5J5nC
        i6R1DDq1NkqXIMgpAGJj++lRjHF3GcsCwvfKVBhOZh2D9oGNkxoEOQVALF+fqWAsyDloSu/m0Z008ncr
        sTYEymEWUoIgpwBgunjrHK3BHcwyxsRP1vZBWiG7wFT11nFowZyNtiDIKQBi3bj1vH6amdvmCagOEU+F
        EcLWsf4gZ6UpCHIJgNvKWFv8q2WAASCx6l6QuQfpl+gKCSPW8Rh1NDuxIMglAMgQqp9b8NGSrJ2mql6Q
        Jl8alvrwAWkdk/yCRWAFQQ4BwAJTsSccn9MpFGsprErqd5goqg9fltZxGcuxGOpBsPYAIIM4ZSq4Nn8n
        6QoeQuwdhJXZFkU1CNYaAAzBpp891vrXReYMqs4G0gdeGGM9k6+TiyMEwdoCgOFWR8i2t/hUmQiaIWFD
        2UFax8fFzvxGEDAgcomwiAR19YdJ5vh7v2T0btPsHF0koeQpcixY7NL6O8hgl8UyZjo1KVMMme4qTbWM
        qUdm6MRYv/xQmeHzbZIZRMeEF03r71E1HTQ6aE3wc2JdhCVIQZAcQtv/FMQmlKS1sRiWGAA0w5KTN1XB
        A09RJpy2/v7HZDEsJQC4278pmXl1E4/fPaX1PbBrf8KqmTMALpW09PHCSLPwJmH8n/WdcGj1clVsIgCo
        uv5CkuhKDh4FzuN9jqHkQKZwrEp6riyKpgBgocgU+b1+o6QDh+5Vjsngz8dIpnAfs9YyBkwcaZ0v0j9R
        FE0BkCuki1vniyxjXxSlBQCtf9V+lao8/uf6WZqN0gKgaYpZmquLo6QAYBwB2b7WuTLFzEaXnV0KJQUA
        DTzWeSL9FkVSSgAwE0msU4q+hrvIIikhABgiFptECj8ki6WEAIjNBYQkhHQZR5AduQcAE1pa5xZMWjgq
        Z3IOAPIFmyajIKfherJocg0AOnQulNZ5IS9+Q7KJsyHHACAtjVY965yCr5COyC0AdpSkqVnnEzxBdloe
        JmdyCgAWhWasgHUuQUYdh3WGHZFLAJAp3bZyC+8EdAY5FdYeACwHxyge6/tXJaWcmUGdGmsOAMZINK0d
        GPTCb2CNAUAVjxW+rO9cl2HjfUcOF8GaAoC5A5lyNtalW/cUmTrfYLGsIQCo2h0nUweV0uvH9snrAZfM
        UgOAcYasEv5pSaud9f0sSTUfvOZPSSwtAHaVb5YXSes7NcnAEloBnQ7MHQDbyn0k6eV9h49fIBnOXVxC
        5xhsMgB4rDMVPANDmMzxDDlkRDEvg0zk0HelEUeMGQBM2kByBbn1/A6zePPRkrn3Wa83tlpnV+ni5SXP
        H/cj0BQA1rwAQVKsqGMzL0BTn/uYMncfY/qLzN6diqYAWIJU6b4jD5FjTAvj1FhqALCiCOMNGVvoTMhS
        AoBGnq9JlnljGjl/o98QcwUA/fasFfhayaygLB7hzMDUAUAdnfUDj5cvl0xKxRAtZyHsIevj/VMk157f
        aCS1mnkBWIp1b/lgyYodflc7juM4juM4jrMatmz5PxTiKgoaPyE9AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>